
function _password_lcg(x){
    return (0x72d4 + x * 0x41a7) & 0xFF;
}

function _password_transform(x){
    var matrix = [
        0xB4,0x6B,0xCB,0xDE,0xB8,0x74,0xE1,0x51,0x59,0x3D,0x66,0xDD,0xF3,0xDA,0x9D,0x3F,
        0x08,0x0A,0xE6,0xBB,0x68,0x21,0x79,0xF1,0xF2,0xC3,0x69,0xF5,0x44,0x9F,0xAA,0x77,
        0x62,0xD1,0x2E,0x00,0x82,0x52,0xBD,0x57,0x86,0x76,0x34,0x84,0x64,0x31,0x10,0xFD,
        0xAD,0xA9,0xEA,0x01,0x9A,0x53,0xE8,0x7B,0x9B,0x0D,0x56,0x22,0x50,0xB1,0x61,0xF7,
        0x94,0xCE,0x16,0xD5,0x90,0x91,0xC7,0xD8,0xF9,0x3A,0xC5,0x36,0x8B,0x73,0x03,0xAF,
        0x37,0x38,0xA1,0x7A,0x72,0xC8,0xB0,0x02,0x43,0x63,0xD7,0x1D,0x24,0x85,0x25,0xA8,
        0x46,0xE4,0xE0,0x33,0xAC,0xC0,0xA7,0x6D,0xF4,0x95,0x0F,0x4E,0xD6,0x41,0xB6,0x99,
        0x1B,0x2D,0x78,0x8C,0x97,0xE9,0x28,0x4F,0xE3,0x6C,0x1E,0x9E,0xB5,0x11,0xCC,0x87,
        0x7C,0xA2,0x47,0x8D,0xEB,0x70,0x8E,0xA3,0x81,0xFE,0x4C,0x5A,0x8F,0x5E,0x4A,0x5B,
        0xEC,0x15,0x20,0xD0,0x13,0xFC,0x92,0x58,0x7E,0x4B,0x49,0x05,0x09,0x88,0x30,0x89,
        0x5F,0xAB,0x75,0x26,0x80,0xD2,0x17,0x8A,0x60,0xAE,0xCF,0xBE,0x96,0x55,0x54,0x07,
        0xED,0x0C,0x9C,0xCD,0xBA,0xA5,0x32,0x2A,0x29,0x35,0x12,0x83,0x27,0xEE,0xC9,0x7F,
        0x98,0xE5,0xB9,0x19,0xC6,0x3E,0x0E,0x42,0x0B,0xB7,0x1A,0xA4,0x6A,0x2C,0xE2,0xD3,
        0xF8,0xCA,0x18,0xF0,0xDF,0xDC,0x23,0x1C,0x3B,0x48,0xBC,0xFB,0xB2,0x65,0xEF,0x6E,
        0xFA,0xDB,0xF6,0x14,0x71,0x6F,0xD4,0x5D,0x5C,0x4D,0x93,0xFF,0xD9,0x39,0x45,0x40,
        0x2F,0xE7,0x67,0x04,0xC4,0xB3,0xA6,0x7D,0xC2,0x2B,0xC1,0xBF,0x1F,0x06,0x3C,0xA0
    ];
    for (var i=0; i<256; i++) if (matrix[i] == x) return i;
    return -1;
}

function _password_unhex(pass){
    var charset = "HBEAVLGFCSDIM267";
    var result = [];
    for (var i=0; i<pass.length; i+=2){
        result.push(charset.indexOf(pass[i]) + charset.indexOf(pass[i+1]) * 16);
    }
    return result;
}

function _password_checksum(pass){
    var sum = [0xc7, 0x8a];
    sum[0] += pass[0]; sum[1] ^= pass[0];
    sum[0] += pass[1]; sum[1] ^= pass[1];
    sum[0] += pass[2]; sum[1] ^= pass[2];
    sum[0] += pass[3]; sum[1] ^= pass[3];
    sum[0] &= 0xFF;
    sum[0] = _password_lcg(sum[0]);
    sum[1] = _password_lcg(sum[1]);
    return sum;
}

function decode_password(pass){
    if (pass.length != 12) return false;
    pass = _password_unhex(pass);
    pass[0] ^= pass[5];
    pass[1] ^= pass[5];
    pass[2] ^= pass[5];
    pass[3] ^= pass[5];
    var sum = _password_checksum(pass);
    if (sum[0] != pass[4] || sum[1] != pass[5]){
        return false;
    }
    pass[0] = _password_transform(pass[0]) ^ 0x55;
    pass[1] = _password_transform(pass[1]) ^ 0xAA;
    pass[2] = _password_transform(pass[2]) ^ 0xF0;
    pass[3] = _password_transform(pass[3]) ^ 0x0F;
    if (pass[1] & 0x01){
        pass[2] = 59;
        pass[3] = 59;
    }
    var obj = {
        "time": [pass[2], pass[3]],
        "achievements": [
            !!(pass[0] & 0x01),
            !!(pass[0] & 0x02),
            !!(pass[0] & 0x04),
            !!(pass[0] & 0x08),
            !!(pass[0] & 0x10),
            !!(pass[0] & 0x20),
            !!(pass[0] & 0x40)
        ],
        "achievement_bitfield": pass[0],
        "rand_val": pass[1] & 0xFE
    };
    return obj;
}

function password_score(pass){
    var base_score = 18000;
    base_score -= pass['time'][1] * 10;
    base_score -= pass['time'][0] * 60 * 10;
    for (var i=0; i<pass['achievements'].length; i++){
        if (pass['achievements'][i]) base_score += 2000;
    }
    if (pass['achievements'][6]) base_score = 31337;
    if (base_score < 0) base_score = 0;
    return base_score;
}
